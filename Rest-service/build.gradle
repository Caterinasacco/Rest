import aQute.bnd.gradle.Bundle

plugins {
	id "biz.aQute.bnd.builder"
}

configurations {
	importFrameworkComponents {
		canBeResolved true
		canBeConsumed false
		transitive false
	}
}

dependencies {
	//SLF4J
    implementation group: 'org.slf4j', name: 'slf4j-api', version: project.slf4jVersion
	//lombok
    implementation group: 'org.projectlombok', name: 'lombok', version: project.lombokVersion
    annotationProcessor 'org.projectlombok:lombok:'+project.lombokVersion
	//JAXRS
	implementation group: "jakarta.ws.rs", name: "jakarta.ws.rs-api", version: project.jakartaRsApiVersion
	//Jackson Json Views
	implementation group: 'com.fasterxml.jackson.jakarta.rs', name: 'jackson-jakarta-rs-json-provider', version: project.jacksonJsonProviderVersion
	//Atteo
	implementation 'org.atteo.classindex:classindex:'+project.atteoClassIndexVersion
	annotationProcessor('org.atteo.classindex:classindex:' + project.atteoClassIndexVersion)
	
	//WaterBase Dependencies
	implementation group: "it.water.core", name: "Core-api", version:project.waterVersion
	implementation group: "it.water.core", name: "Core-interceptors", version:project.waterVersion
	implementation group: "it.water.core", name: "Core-security", version:project.waterVersion
	implementation group: "it.water.core", name: "Core-permission", version:project.waterVersion
	implementation group: "it.water.core", name: "Core-model", version:project.waterVersion

	implementation group: "it.water.repository", name: "Repository-entity", version:project.waterVersion
	implementation group: "it.water.repository", name: "Repository-service", version:project.waterVersion
	//Project Dependencies	
	implementation project(":Rest-api")
	implementation project(":Rest-jaxrs-api")
	implementation project(":Rest-security")
	implementation project(":Rest-persistence")

	importFrameworkComponents project(":Rest-security")
	importFrameworkComponents project(":Rest-jaxrs-api")

	implementation(group: 'com.nimbusds', name: 'nimbus-jose-jwt', version: project.nimbusJoseJwtVersion)

	testAnnotationProcessor 'org.projectlombok:lombok:'+project.lombokVersion
	testImplementation 'org.mockito:mockito-core:4.6.1'
	testImplementation 'org.mockito:mockito-junit-jupiter:4.6.1'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:' + project.junitJupiterVersion
	testImplementation 'org.junit.jupiter:junit-jupiter-engine:' + project.junitJupiterVersion
	testImplementation 'org.atteo.classindex:classindex:' + project.atteoClassIndexVersion
	//rest runtime for test
	testImplementation 'org.glassfish.jersey.core:jersey-client:2.34'
	testImplementation 'org.glassfish.jersey.core:jersey-common:2.34'
}


test {
	useJUnitPlatform()
}


jar {
	duplicatesStrategy = DuplicatesStrategy.INCLUDE
	doFirst {
		def annotationsPath = "$buildDir/classes/java/main/META-INF/annotations"
		def serviceDir = file(annotationsPath)
		// copy all deps annotations
		for (file in project.configurations.importFrameworkComponents) {
			zipTree(file).matching { include 'META-INF/annotations/*' }.each { f ->
				new File(serviceDir, f.name) << f.getText("UTF-8")
			}
		}
	}
}

publishing {
    	publications {
        	water(MavenPublication) {
            	from components.java
        	}
    }
 }
 